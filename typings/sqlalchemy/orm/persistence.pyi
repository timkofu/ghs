"""
This type stub file was generated by pyright.
"""

from ..sql.base import CompileState, Options
from ..sql.dml import DeleteDMLState, UpdateDMLState

"""private module containing functions used to emit INSERT, UPDATE
and DELETE statements on behalf of a :class:`_orm.Mapper` and its descending
mappers.

The functions here are called only by the unit of work functions
in unitofwork.py.

"""
def save_obj(base_mapper, states, uowtransaction, single=...): # -> None:
    """Issue ``INSERT`` and/or ``UPDATE`` statements for a list
    of objects.

    This is called within the context of a UOWTransaction during a
    flush operation, given a list of states to be flushed.  The
    base mapper in an inheritance hierarchy handles the inserts/
    updates for all descendant mappers.

    """
    ...

def post_update(base_mapper, states, uowtransaction, post_update_cols): # -> None:
    """Issue UPDATE statements on behalf of a relationship() which
    specifies post_update.

    """
    ...

def delete_obj(base_mapper, states, uowtransaction): # -> None:
    """Issue ``DELETE`` statements for a list of objects.

    This is called within the context of a UOWTransaction during a
    flush operation.

    """
    ...

_EMPTY_DICT = ...
class BulkUDCompileState(CompileState):
    class default_update_options(Options):
        _synchronize_session = ...
        _autoflush = ...
        _subject_mapper = ...
        _resolved_values = ...
        _resolved_keys_as_propnames = ...
        _value_evaluators = ...
        _matched_objects = ...
        _matched_rows = ...
        _refresh_identity_token = ...
    
    
    @classmethod
    def orm_pre_session_exec(cls, session, statement, params, execution_options, bind_arguments, is_reentrant_invoke): # -> tuple[Unknown, Unknown] | tuple[Unknown, immutabledict]:
        ...
    
    @classmethod
    def orm_setup_cursor_result(cls, session, statement, params, execution_options, bind_arguments, result):
        ...
    


@CompileState.plugin_for("orm", "update")
class BulkORMUpdate(UpdateDMLState, BulkUDCompileState):
    @classmethod
    def create_for_statement(cls, statement, compiler, **kw): # -> Any:
        ...
    


@CompileState.plugin_for("orm", "delete")
class BulkORMDelete(DeleteDMLState, BulkUDCompileState):
    @classmethod
    def create_for_statement(cls, statement, compiler, **kw): # -> Any:
        ...
    


