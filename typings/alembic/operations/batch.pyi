"""
This type stub file was generated by pyright.
"""

class BatchOperationsImpl:
    def __init__(self, operations, table_name, schema, recreate, copy_from, table_args, table_kwargs, reflect_args, reflect_kwargs, naming_convention, partial_reordering) -> None:
        ...
    
    @property
    def dialect(self):
        ...
    
    @property
    def impl(self):
        ...
    
    def flush(self): # -> None:
        ...
    
    def alter_column(self, *arg, **kw): # -> None:
        ...
    
    def add_column(self, *arg, **kw): # -> None:
        ...
    
    def drop_column(self, *arg, **kw): # -> None:
        ...
    
    def add_constraint(self, const): # -> None:
        ...
    
    def drop_constraint(self, const): # -> None:
        ...
    
    def rename_table(self, *arg, **kw): # -> None:
        ...
    
    def create_index(self, idx): # -> None:
        ...
    
    def drop_index(self, idx): # -> None:
        ...
    
    def create_table_comment(self, table): # -> None:
        ...
    
    def drop_table_comment(self, table): # -> None:
        ...
    
    def create_table(self, table):
        ...
    
    def drop_table(self, table):
        ...
    
    def create_column_comment(self, column): # -> None:
        ...
    


class ApplyBatchImpl:
    def __init__(self, impl, table, table_args, table_kwargs, reflected, partial_reordering=...) -> None:
        ...
    
    def alter_column(self, table_name, column_name, nullable=..., server_default=..., name=..., type_=..., autoincrement=..., comment=..., **kw): # -> None:
        ...
    
    def add_column(self, table_name, column, insert_before=..., insert_after=..., **kw): # -> None:
        ...
    
    def drop_column(self, table_name, column, **kw): # -> None:
        ...
    
    def create_column_comment(self, column): # -> None:
        """the batch table creation function will issue create_column_comment
        on the real "impl" as part of the create table process.

        That is, the Column object will have the comment on it already,
        so when it is received by add_column() it will be a normal part of
        the CREATE TABLE and doesn't need an extra step here.

        """
        ...
    
    def create_table_comment(self, table): # -> None:
        """the batch table creation function will issue create_table_comment
        on the real "impl" as part of the create table process.

        """
        ...
    
    def drop_table_comment(self, table): # -> None:
        """the batch table creation function will issue drop_table_comment
        on the real "impl" as part of the create table process.

        """
        ...
    
    def add_constraint(self, const): # -> None:
        ...
    
    def drop_constraint(self, const): # -> None:
        ...
    
    def create_index(self, idx): # -> None:
        ...
    
    def drop_index(self, idx): # -> None:
        ...
    
    def rename_table(self, *arg, **kw):
        ...
    


